{"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV1uSdvp":{"name":"u","abstract":"<p>Undocumented</p>","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV1vSdvp":{"name":"v","abstract":"<p>Undocumented</p>","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV1wSdvp":{"name":"w","abstract":"<p>Undocumented</p>","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV1tSdvp":{"name":"t","abstract":"<p>Undocumented</p>","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV8latitudeSdvp":{"name":"latitude","abstract":"<p>Property that translates between latitude in decimal degrees and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV1vSdvp\">v</a></code> in radians.</p>","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV9longitudeSdvp":{"name":"longitude","abstract":"<p>Property that translates between longitude in decimal degrees and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV1uSdvp\">u</a></code> in radians.</p>","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateVACSd1u_Sd1vSd1wSd1ttcfc":{"name":"init(u:v:w:t:)","abstract":"<p>Create a coordinate. The components are multi-use in some cases (particularly <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV1uSdvp\">u</a></code> and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV1vSdvp\">v</a></code>) and may depend on the","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateVACSd8latitude_Sd9longitudeSd8altitudeSd4timetcfc":{"name":"init(latitude:longitude:altitude:time:)","abstract":"<p>Create a coordinate using latitude and longitude. This initializer expects decimal degrees for the horizontal","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV03getC0ACyF":{"name":"getCoordinate()","abstract":"<p>Required for conformance to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConvertibleCoordinate.html\">ConvertibleCoordinate</a></code>. Just returns <code>self</code>.</p>","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html#/s:15SwiftProjection0B10CoordinateV24asCLLocationCoordinate2DSC0eF1DVyF":{"name":"asCLLocationCoordinate2D()","abstract":"<p>Converts the horizontal components of this coordinate to a <code>CLLocationCoordinate2D</code>.</p>","parent_name":"ProjectionCoordinate"},"Structs/ProjectionCoordinate.html":{"name":"ProjectionCoordinate","abstract":"<p>A concrete implementation of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConvertibleCoordinate.html\">ConvertibleCoordinate</a></code>, used as the return value of <code>Projection.transform()</code></p>"},"Protocols/ConvertibleCoordinate.html#/s:15SwiftProjection21ConvertibleCoordinateP03getD0AA0bD0VyF":{"name":"getCoordinate()","abstract":"<p>Convert this value into a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ProjectionCoordinate.html\">ProjectionCoordinate</a></code></p>","parent_name":"ConvertibleCoordinate"},"Protocols/ConvertibleCoordinate.html":{"name":"ConvertibleCoordinate","abstract":"<p>Any type conforming to <code>ConvertibleCoordinate</code> can be transformed by <code>Projection.transform</code>."},"Extensions/MKMapPoint.html#/s:SC10MKMapPointV15SwiftProjectionE13getCoordinateAC0dF0VyF":{"name":"getCoordinate()","abstract":"<p>Conforms <code>MKMapPoint</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConvertibleCoordinate.html\">ConvertibleCoordinate</a></code>.</p>","parent_name":"MKMapPoint"},"Extensions/CLLocationCoordinate2D.html#/s:SC22CLLocationCoordinate2DV15SwiftProjectionE13getCoordinateAC0dF0VyF":{"name":"getCoordinate()","abstract":"<p>Conforms <code>CLLocationCoordinate2D</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConvertibleCoordinate.html\">ConvertibleCoordinate</a></code>. Just uses the latitude and longitude members of the","parent_name":"CLLocationCoordinate2D"},"Extensions/CLLocationCoordinate2D.html":{"name":"CLLocationCoordinate2D"},"Extensions/MKMapPoint.html":{"name":"MKMapPoint"},"Enums/ProjectionError.html#/s:15SwiftProjection0B5ErrorO07LibraryC0ACs5Int32V4code_tcACmF":{"name":"LibraryError","abstract":"<p>Errors initiated from within PROJ. <code>code</code> is the value from <code>proj_errno</code>.</p>","parent_name":"ProjectionError"},"Enums/ProjectionError.html#/s:15SwiftProjection0B5ErrorO11descriptionSSvp":{"name":"description","abstract":"<p>For <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ProjectionError.html#/s:15SwiftProjection0B5ErrorO07LibraryC0ACs5Int32V4code_tcACmF\">LibraryError</a></code>s, the string description from PROJ for the error code is used.</p>","parent_name":"ProjectionError"},"Enums/ProjectionError.html":{"name":"ProjectionError","abstract":"<p>Errors thrown by SwiftProjection</p>"},"Classes/Projection.html#/s:15SwiftProjection0B0C7inverseACSgvp":{"name":"inverse","abstract":"<p>A <code>Projection</code> that performs the inverse of this Projection.","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C2idSSvp":{"name":"id","abstract":"<p>The type of projection this is, ex: the <code>foo</code> in <code>proj=foo</code>.</p>","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C11descriptionSSvp":{"name":"description","abstract":"<p>A long description of the projection.</p>","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C10definitionSSvp":{"name":"definition","abstract":"<p>A normalized version of the PROJ4 definition. It removes &lsquo;+&rsquo; signs and expands <code>init</code> definitions.</p>","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C10hasInverseSbvp":{"name":"hasInverse","abstract":"<p>True this projection is invertible.</p>","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C8accuracySdSgvp":{"name":"accuracy","abstract":"<p>Expected accuracy. If this projections does not provide it, this value is <code>nil</code>.</p>","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C14inputIsAngularSbvp":{"name":"inputIsAngular","abstract":"<p>True if the input is supposed to be angular (for example, converting from geodetic to cartesian coordinates).</p>","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C15outputIsAngularSbvp":{"name":"outputIsAngular","abstract":"<p>True if the output is supposed to be angular (for example, converting from cartesian to geodetic coordinates).</p>","parent_name":"Projection"},"Classes/Projection.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C12currentErrorAA0bD0OSgvp":{"name":"currentError","abstract":"<p>The current error for the current PROJ context, as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ProjectionError.html#/s:15SwiftProjection0B5ErrorO07LibraryC0ACs5Int32V4code_tcACmF\">ProjectionError.LibraryError</a></code>.","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0CACSS10projString_tKcfc":{"name":"init(projString:)","abstract":"<p>Initializes a <code>Projection</code> using a PROJ-style definition. This is a forward transformation, to get an inverse","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0CACSS10identifier_tKcfc":{"name":"init(identifier:)","abstract":"<p>Initializes a <code>Projection</code> using a well known identifier available in a bundled data file. The standard PROJ data","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C9transformAA0B10CoordinateVAA011ConvertibleD0_p10coordinate_tKF":{"name":"transform(coordinate:)","abstract":"<p>Transform a single coordinate with this projection.</p>","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C9transformSayAA0B10CoordinateVGs11AnySequenceVyAA011ConvertibleD0_pG11coordinates_tKF":{"name":"transform(coordinates:)","abstract":"<p>Transform multiple coordinates with this projection. Currently this method does a fairly naive map of the given","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C10asPipelineACyKF":{"name":"asPipeline()","abstract":"<p>Converts a normal <code>Projection</code> into a pipeline projection with a single step.","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C10appendStepACSS10projString_tKF":{"name":"appendStep(projString:)","abstract":"<p>Append a step given as a PROJ definition to a pipeline operation.</p>","parent_name":"Projection"},"Classes/Projection.html#/s:15SwiftProjection0B0C10appendStepA2C10projection_tKF":{"name":"appendStep(projection:)","abstract":"<p>Append an existing <code>Projection</code> as a step to a pipeline operation.</p>","parent_name":"Projection"},"Classes/Projection.html":{"name":"Projection","abstract":"<p>Transforms coordinates from one reference system to another. A Swift class is used primarily for the deinitializers to"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}